# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sergioradigales32
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: smash-cloud-users
# "service" is the name of this project. This will also be added to your AWS resource names.
service: calisthenics-users-${opt:stage, 'dev'}

plugins:
  - serverless-dotenv-plugin

useDotenv: true

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1
  stage: ${opt:stage, 'dev'}
  environment:
    DYNAMODB_USER_TABLE: ${self:custom.userTableName}
    JWT_SECRET: ${env:JWT_SECRET}
    SALT_ROUNDS: ${env:SALT_ROUNDS}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.userTableName}"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.userTableName}/index/*"

custom:
  userTableName: user-${self:service}

functions:
  createUser:
    handler: dist/app/user/create.handle
    events:
      - httpApi:
          path: /user
          method: post
  findUserById:
    handler: dist/app/user/find-by-id.handle
    events:
      - httpApi:
          path: /user/{id}
          method: get
  signIn:
    handler: dist/app/user/sign-in.handle
    events:
      - httpApi:
          path: /user/sign-in
          method: post

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: UsernameIndex
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        TableName: ${self:custom.userTableName}
